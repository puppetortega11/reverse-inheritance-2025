version: '3.8'

services:
  trading-bot:
    build: .
    container_name: solana-trading-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - SOLANA_NETWORK=mainnet
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - JUPITER_API_URL=https://quote-api.jup.ag/v6
      - BOT_WALLET_PRIVATE_KEY=${BOT_WALLET_PRIVATE_KEY}
      - TRADING_STRATEGY=aggressive
      - MAX_POSITION_SIZE=10
      - STOP_LOSS_PERCENTAGE=5
      - TAKE_PROFIT_PERCENTAGE=15
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for better security
  nginx:
    image: nginx:alpine
    container_name: trading-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - trading-bot
    networks:
      - trading-network

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: trading-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - trading-network

  grafana:
    image: grafana/grafana:latest
    container_name: trading-bot-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - trading-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  trading-network:
    driver: bridge
